{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Morsematics": {
		"prefix": "morsematics",
		"body": [
			"------------------------------Morsematics------------------------------",
			"Souvenir (Recieved Letters): ",
			"",
			"Initial Pair (Serial Characters 4 and 5): ",
			"",
			"For each indicator that has a matching letter in the received letters, add 1 to the first character of your pair if the indicator is on, or the second character if it is of: ",
			"",
			"If sum is a square number, add 4 to 1st, else subtract 4 from 2nd: ",
			"",
			"Add largest recieved to 1st: ",
			"",
			"Subtract Prime Recieved from 1st: ",
			"",
			"Subtract Square Recieved from 2nd: ",
			"",
			"If Recieved Letters are divisible by battery count, subtract letters from both characters in your pair: ",
			"",
			"If equal, transmit 1st",
			"If 1st larger, transmit difference",
			"If 2nd larger, transmit sum",
			"",
			"Letter to Transmit: ",
			"",
			"A=1   N=14",
			"B=2   O=15",
			"C=3   P=16",
			"D=4   Q=17",
			"E=5   R=18",
			"F=6   S=19",
			"G=7   T=20",
			"H=8   U=21",
			"I=9   V=22",
			"J=10  W=23",
			"K=11  X=24",
			"L=12  Y=25",
			"M=13  Z=26",
		]
	},
	"Round Keypad": {
		"prefix": "roundKeypad",
		"body": [
			"------------------------------Round Keypad------------------------------",
			"No Souvenir",
			"Symbols:",
			"\t$1",
			"Column Scores: ",
			"---Manual---",
			"https://ktane.timwi.de/HTML/Round%20Keypad%20rearranged%20(Timwi).html"
		]
	},
	"Neutralization": {
		"prefix": "neutralization",
		"body": [
			"------------------------------Neutralization------------------------------",
			"Souvenir: Acid Color/Volume",
			"Color: $1",
			"Volume: $2",
			"",
			"Acid: ",
			"Drops: ",
			"Filter: ",
			"",
			"---Manual---",
			"Base Calculation",
			"  NSA and batteries = 3: NH3",
			"  Lit CAR, FRQ, or IND: KOH",
			"  No ports and SN has vowel: LiOH",
			"  Acid formula has letter in common with indicator: KOH",
			"    HBr (red): BOB or indicator with R",
			"    HF (yellow): FRK or FRQ",
			"    HCl (green): CAR or CLR",
			"    HI (blue): IND or SIG",
			"0 > AA: NH3",
			"Otherwise:",
			"    Yellow or Green: NaOH",
			"    Red or Blue: LiOH",
			"",
			"Table:",
			"",
			"|  Color | Base | Filter | Factors |     |     |",
			"-----------------------------------------------",
			"| Red    | NH3  | No     | v/5     | 2   | (4) |",
			"|        | KOH  | Yes    | v/5     | 3   | (1) |",
			"|        | NH3  | Yes    | v/5     | 2   | (4) |",
			"-----------------------------------------------",
			"| Yellow | NH3  | Yes    | v/5     | 2   | (4) |",
			"|        | KOH  | No     | v/5     | v/5 | (1) |",
			"|        | LiOH | Yes    | v/5     | v/5 | (4) |",
			"|        | NaOH | No     | v/5     | 3   | (2) |",
			"-----------------------------------------------",
			"| Green  | NH3  | Yes    | v/5     | 3   |     |",
			"|        | KOH  | Yes    | v/5     | (1) |     |",
			"|        | LiOH | Yes    | v/5     | v/5 | (4) |",
			"|        | NaOH | No     | v/5     | 3   | (2) |",
			"-----------------------------------------------",
			"| Blue   | NH3  | No     | v/5     | 2   | (4) |",
			"|        | KOH  | No     | v/5     | v/5 |     |",
			"|        | LiOH | No     | v/5     | 3   | (4) |",
			"",
			"For (x): If Holders most, use 4",
			"         If Port Types most use 2",
			"         If Indicators most, use 1",
			"         If tie, use x"
		]
	},
	"Listening": {
		"prefix": "listening",
		"body": [
			"------------------------------Listening------------------------------",
			"Souvenir (Listening Code)",
			"",
			"---Manual---",
			"",
			"Arcade                $#$#*",
			"Ballpoint Pen Writing $*$**",
			"Beach                 *&*&&",
			"Book Page Turning     ###&$",
			"Car Engine            &#**&",
			"Casino                **$*#",
			"Censorship            &&$&*",
			"Chainsaw              &#&&#",
			"Compressed Air        $$*$*",
			"Cow                   &$#$&",
			"Dial-up Internet      *#&*&",
			"Door Closing          #$#&$",
			"Extractor Fan         $#$*&",
			"Firework Exploding    $&$$*",
			"Glass Shattering      *$*$*",
			"Helicopter            #&$&&",
			"Marimba               &*$*$",
			"Medieval Weapons      &$**&",
			"Oboe                  &#$$#",
			"Phone Ringing         &$$&*",
			"Police Radio Scanner  **###",
			"Rattling Iron Chain   *#$&&",
			"Reloading Glock 19    $&**#",
			"Saxophone             $&&**",
			"Servo Motor           $&#$$",
			"Sewing Machine        #&&*#",
			"Soccer Match          ##*$*",
			"Squeaky Toy           $*&##",
			"Supermarket           #$$&*",
			"Table Tennis          *$$&$",
			"Tawny Owl             $#*$&",
			"Taxi Dispatch         &&&**",
			"Tearing Fabric        $&&*&",
			"Throat Singing        **$$$",
			"Thrush Nightmare      **#**",
			"Tibetan Nuns          #&&&&",
			"Train Station         #$$**",
			"Tuba                  #&$##",
			"Vacuum Cleaner        #&$*&",
			"Waterfall             &**$$",
			"Zipper                &$&##"
		]
	},
	"Color Flash": {
		"prefix": "colorFlash",
		"body": [
			"------------------------------Color Flash------------------------------",
			"Souvenir: Last Color",
			"Words: $1",
			"Colors: $2",
			"---Manual---",
			"Last Color Red:",
			"  If Green is the Word ≥ 3 times, YES on the 3rd time Green is either word or color",
			"  If Blue is the color once, NO when word is Magenta",
			"  Else, YES the last time White is either word or color",
			"",
			"Last Color Yellow:",
			"  If Blue is shown in Green colorm Yes on the first time Green is color",
			"  If White is shown in White or Red, YES on the Second Mismatch (Word/Color does not match)",
			"  Else, Count Magenta as color or word, NO on count",
			"",
			"Last Color Green:",
			"  If Word occurs consecutively with different colors, press NO on 5th Word",
			"  If Magenta as word ≥ 3 times, NO on first Yellow word/color",
			"  Else, YES on any match",
			"",
			"Last Color Blue:",
			"  If ≥ 3 mismatches, YES on first mismatch",
			"  If Red is shown in Yellow OR Yellow is shown in White, NO when word White is shown in Red",
			"  Else, YES on last Green Occurence",
			"",
			"Last Color Magenta:",
			"  If Colors occurs consecutively on different words, YES on 3rd",
			"  If Yellow Words Count > Blue Color Count, NO on last Yellow Occurence",
			"  Else, NO on first occurence of Color of word matches matches 7th",
			"",
			"Last Color White:",
			"  If 3rd color matches 4th OR 5th word, NO first time Blue is word/color",
			"  If Yellow is shown in Red, YES on last Blue color",
			"  Else, NO anytime",
		]
	},
	"Turn the Keys": {
		"prefix": "turnTheKeys",
		"body": [
			"------------------------------Turn The Keys------------------------------",
			"No Souvenir",
			"",
			"Do BEFORE:",
			"Listening",
			"Crazy Talk",
			"Orientation Cube",
			"Two Bits",
			"Color Flash",
			"Round Keypad",
			"",
			"Do AFTER:",
			"Maze",
			"Memory",
			"Complicated Wires",
			"Wire Sequence",
			"Cryptography",
			"Semaphore",
			"Combination Lock",
			"Simon Says",
			"Astrology",
			"Switches",
			"Plumbing",
			"",
			"For multiple Key Sets:",
			"Right: High to low",
			"Left: Low to high"
		]
	},
	"Rubik's Cube": {
		"prefix": "rubiksCube",
		"body": [
			"------------------------------Rubik's Cube------------------------------",
			"No Souvenir",
			"",
			"U: ",
			"L: ",
			"F: ",
			"R: ",
			"D: ",
			"",
			"U= ",
			"L= ",
			"F= ",
			"",
			"---Manual---",
			"Yellow = 1",
			"Blue = 2",
			"Red = 3",
			"Green = 4",
			"Orange = 5",
			"White = 6",
			"",
			"Remove D from Serial Number",
			"New Serial: ",
			"Moves: ",
			"",

			"| U | L | F | Moves |",
			"---------------------",
			"| 0 | 1 | 2 | L' F' |",
			"| 3 | 4 | 5 | D' U' |",
			"| 6 | 7 | 8 | U  B' |",
			"| 9 | A | B | F  B  |",
			"| C | D | E | L  D  |",
			"| F | G | H | R' U  |",
			"| I | J | K | U' F  |",
			"| L | M | N | B' L' |",
			"| O | P | Q | B  R  |",
			"| R | S | T | D  L  |",
			"| U | V | W | R  D' |",
			"| X | Y | Z | F' R' |",
			"",
			"If R is red, green or blue, take both moves for each serial character in order",
			"    otherwise take every first move, then every second move for each character",
			"If R is red or yellow, change first 5 moves to opposite",
			"If R is green or white, reverse order of ALL moves"
		]
	},
	"Rock-Paper-Scissors-Lizard-Spock": {
		"prefix": "rpsls",
		"body": [
			"------------------------------Rock-Paper-Scissors-Lizard-Spock------------------------------",
			"No Souvenir",
			"Decoy: ",
			"",
			"---Manual---",
			"",
			"Decoy is in the middle of shape or middle of a line of three",
			"",
			"|               # of occurences of:               |     Rock     |       Paper      |   Scissors  |     Lizard     |     Spock     |",
			"------------------------------------------------------------------------------------------------------------------------------------",
			"|                    Gets beaten by               | Paper, Spock | Scissors, Lizard | Spock, Rock | Rock, Scissors | Lizard, Paper |",
			"| serial number letter (skip if X or Y in Serial) | R, O         | P, A             | S, I        | L, Z           | C, K          |",
			"|               port (skip if PS/2)               | RJ-45        | Parallel         | DVI-D       | DVI-D          | Stereo RCA    |",
			"|         lit indicator (skip if lit TRN)         | FRK, FRQ     | BOB, IND         | CAR, SIG    | CLR, NSA       | SND, MSA      |",
			"|       unlit indicator (skip if unlit TRN)       | FRK, FRQ     | BOB, IND         | CAR, SIG    | CLR, NSA       | SND, MSA      |",
			"|               serial number digit               | 0, 5         | 3, 6             | 1, 9        | CLR, NSA       | 4, 7          |"
		]
	},
	"Bitmaps": {
		"prefix": "bitmaps",
		"body": [
			"------------------------------Bitmaps------------------------------",
			"Souvenir: Pixel Counts",
			"",
			"Color (Black/White): ",
			"Top Left: ",
			"Top Right: ",
			"Bottom Left: ",
			"Bottom Right: ",
			"",
			"Solution: ",
			"",
			"---Manual---",
			"Start with last serial digit",
			"",
			"0: If exactly one Quadrant has ≤ 5 whites, answer is white count in the other Quadrants",
			"1: If exactly as many mostly white Quadrants as ltie indicators, answer is Batteries",
			"2: If exactly one ROW or COLUMN is completely white/black, answer is x or y coordinate",
			"3: If fewer mostly-white Quadrants than mostly-black Quadrants, answer is mostly-black Quadrants",
			"4: If 36 or more whites in total, answer is total white count",
			"5: If more mostly-white Quadrants than mostly-black Quadrants, answer is smallest Black count in any Quadrant",
			"6: If exactly one Quadrant has ≤ 5 blacks, answer is black count in the other Quadrants",
			"7: If exactly as many mostly-black Quadrants as unlit indicators, answer is Ports count",
			"8: If 3x3 square, answer is xcoordinate of the center (1-based)",
			"9: If exactly as many mostly-white as mostly-black Quadrants, answer is first number in Serial"
		]
	},
	"Logic": {
		"prefix": "logic",
		"body": [
			"------------------------------Logic------------------------------",
			"No Souvenir",
			"Line 1: ",
			"Line 2: ",
			"",
			"---Manual---",
			"A Number of batteries = number of indicators",
			"B Serial number has more letters than digits",
			"C Has IND indicator",
			"D Has FRK indicator",
			"E Exactly 1 unlit indicator",
			"F More than 1 port type",
			"G 2 batteries or more",
			"H Less than 2 batteries",
			"I Last digit of serial number is odd",
			"J More than 4 batteries",
			"K Exactly 1 lit indicator",
			"L More than 2 indicators",
			"M No duplicate ports",
			"O Has both lit and unlit indicators",
			"P Has parallel port",
			"Q Exactly 2 ports",
			"R Has PS/2 port",
			"S Sum of digits in serial number > 10",
			"T Has MSA indicator",
			"U Exactly 1 battery holder",
			"V Serial number contains vowels",
			"W No indicators",
			"X Exactly 1 indicator",
			"Y More than 5 ports",
			"Z Less than 2 ports",
			"",
			"Conjunction           ∧ AND   Returns true if all inputs are true. Else returns false",
			"Disjunction           ∨ OR    Returns true if any input is true. Else returns false.",
			"Exclusive Disjunction ⊻ XOR   Returns true if exactly one input is true. Else returns false.",
			"Alternative Denial    | NAND  Returns false if all inputs are true. Else returns true.",
			"Joint Denial          ↓ NOR   Returns false if any input is true. Else returns true.",
			"Biconditional         ↔ XNOR  Returns false if exactly one input is true. Else returns true.",
			"Implication (Left)    → -     Returns false when left input is true and right input is false. Else returns true.",
			"Implication (Right)   ← -     Returns false when left input is false and right input is true. Else returns true."
		]
	},
	"Complicated Buttons": {
		"prefix": "complicatedButtons",
		"body": [
			"------------------------------Complicated Buttons------------------------------",
			"No Souvenir",
			"Input: ",
			"",
			"",
			"---Manual---",
			"                  | None        | Red         | Blue        | Red and Blue |",
			"----------------------------------------------------------------------------",
			"None              | Press       | Repeating   | Repeating   | Repeating    |",
			"Press             | Press       | Press       | Don't Press | Serial Port  |",
			"Middle            | Don't Press | ≥ 2 Holders | Don't Press | Repeating    |",
			"Middle and Press  | ≥ 2         | ≥ 2 Holders | Serial Port | Don't Press  |",
			"",
			"If none, press middle in order",
			"Order: ",
			"First Button Label | 0-1 Batteries | 2-3 Batteries | 4-5 Batteries | 6+ Batteries |",
			"-----------------------------------------------------------------------------------",
			"Press              | 1,2,3         | 2,3,1         | 3,1,2         | 1,2,3        |",
			"Hold               | 2,1,3         | 3,2,1         | 1,3,2         | 2,3,1        |",
			"Detonate           | 3,1,2         | 1,2,3         | 2,1,3         | 3,1,2        |"
		]
	},
	"Chess": {
		"prefix": "chess",
		"body": [
			"------------------------------Chess------------------------------",
			"Souvenir: Chess Positions:",
			"",
			"",
			"",
			"",
			"",
			"",
			"6 - - - - - -",
			"5 - - - - - -",
			"4 - - - - - -",
			"3 - - - - - -",
			"2 - - - - - -",
			"1 - - - - - -",
			"  a b c d e f",
			"",
			"---Manual---",
			"#1: If #5 is a Queen, place King; Else Bishop",
			"#2: If last serial digit odd, place Rook; Else Knight",
			"#3: If less than two rooks, place Queen; Else King",
			"#4: Always a Rook",
			"#5: If field is white, place Queen; Else Rook",
			"#6: If no Queen, place Queen; Else if no Knight, place Knight; Else Bishop",
			"",
			"a/c/e EVENS are black",
			"b/d/f ODDS are white"
		]
	},
	"Sea Shells": {
		"prefix": "seaShells",
		"body": [
			"------------------------------Sea Shells-------------------------------",
			"Souvenir: Words per Stage",
			"Input:",
			"",
			"",
			"",
			"---Manual---",
			"he eh:",
			"  Shih Tzu, Sit, Shoe, Shih Tzu, Sit, Shoe, Shih Tzu",
			"  Toucan, 2, Can, Toucan, 2, Can, Toucan",
			"  Switch, Twitch, Witch, Switch, Twitch, Witch, Switch",
			"  Bulgaria, Burger, Alarm, Bulgaria, Burger, Alarm, Bulgaria",
			"------------------------------------------------------------------------",
			"he hh:",
			"  Shoe, She, Sushi, Sushi, Shoe, She",
			"  Can, Tutu, Cancan, Cancan, Can, Tutu",
			"  Witch, Itch, Stitch, Stitch, Witch, Itch",
			"  Alarm, Armour, LLama, LLama, Alarm, Armour",
			"------------------------------------------------------------------------",
			"he ee:",
			"  Sushi, Shoe, She, Sushi, Shoe, She, Sushi",
			"  Cancan, Can, Tutu, Cancan, Can, Tutu, Cancan",
			"  Stitch, Witch, Stitch, Witch, Stitch, Witch, Stitch",
			"  LLama, Alarm, Armour, LLama, Alarm, Armour, LLama",
			"------------------------------------------------------------------------",
			"he he:",
			"  Sit, Shoe, Shoe, Shih Tzu, Sit, Shoe, Shih Tzu",
			"  Two, Can, Can, Toucan, Two, Can, Toucan",
			"  Twitch, Witch, Witch, Switch, Twitch, Witch, Switch",
			"  Burger, Alarm, Alarm, Bulgaria, Burger, Alarm, Bulgaria",
			"------------------------------------------------------------------------",
			"hh eh:",
			"  Shih Tzu, Sushi, Sushi, Shih Tzu, Shih Tzu, Sushi",
			"  Toucan, Cancan, Cancan, Toucan, Toucan, Cancan",
			"  Switch, Stitch, Stitch, Switch, Switch, Stitch",
			"  Bulgaria, LLama, LLama, Bulgaria, Bulgaria, LLama",
			"------------------------------------------------------------------------",
			"hh hh:",
			"  She, Sit, She, She, Sit, Shih Tzu",
			"  Tutu, Two, Tutu, Tutu, Two, Toucan",
			"  Itch, Twitch, Itch, Itch, Twitch, Switch",
			"  Armour, Burger, Armour, Armour, Burger, Bulgaria",
			"------------------------------------------------------------------------",
			"hh ee:",
			"  Sushi, Shoe, Sushi, Shoe, Sushi, Shoe, Sushi",
			"  Cancan, can, cancan, can, cancan, can, cancan",
			"  Stitch, Witch, Stitch, Witch, Stitch, Witch, Stitch",
			"  LLama, Alarm, LLama, Alarm, LLama, Alarm, LLama",
			"------------------------------------------------------------------------",
			"hh he:",
			"  Shih Tzu, Sushi, Sushi, Sit, Shoe",
			"  Toucan, Cancan, Cancan, Two, Can",
			"  Switch, Stitch, Stitch, Twitch, Witch",
			"  Bulgaria, LLama, LLama, Burger, Alarm",
			"------------------------------------------------------------------------",
			"eh eh:",
			"  Shoe, Shih Tzu, Shoe, Shih Tzu, Shoe",
			"  Can, Toucan, Can, Toucan, Can",
			"  Witch, Switch, Witch, Switch, Witch",
			"  Alarm, Bulgaria, Alarm, Bulgaria, Alarm",
			"------------------------------------------------------------------------",
			"eh hh:",
			"  Sushi, Shoe, Shoe, Sushi, Shoe",
			"  Cancan, Can, Can, Cancan, Cancan, Can",
			"  Stitch, Witch, Witch, Stitch, Stitch, Witch",
			"  LLama, Alarm, Alarm, LLama, LLama, Alarm",
			"------------------------------------------------------------------------",
			"eh ee:",
			"  Sit, Shih Tzu, Sishi, Shoe, She",
			"  2, Toucan, Cancan, Can, Tutu",
			"  Twitch, Switch, Stitch, Witch, Itch",
			"  Burger, Bulgaria, LLama, Alarm, Armour",
			"------------------------------------------------------------------------",
			"eh he:",
			"  Shoe, Shih Tzu, Sit, Shih Tzu, Shoe, Shoe",
			"  Can, Toucan, 2, Toucan, Can, Can",
			"  Witch, Switch, Twitch, Switch, Witch, Witch",
			"  Alarm, Bulgaria, Burger, Bulgaria, Alarm, Alarm",
			"------------------------------------------------------------------------",
			"ee eh:",
			"  Shoe, She, Shoe, She, Sushi, Shoe, She",
			"  Can, Tutu, Can, Tutu, Cancan, Can, Tutu",
			"  Witch, Itch, Witch, Itch, Stitch, Witch, Itch",
			"  Alarm, Armour, Alarm, Armour, LLama, Alarm, Armour",
			"------------------------------------------------------------------------",
			"ee hh:",
			"  Sit, Shih Tzu, Shoe, Sushi, She",
			"  2, Toucan, Can, Cancan, Tutu",
			"  Twitch, Switch, Witch, Stitch, Itch",
			"  Burger, Bulgaria, Alarm, LLama, Armour",
			"------------------------------------------------------------------------",
			"ee ee:",
			"  Sushi, Shih Tzu, Sit, Shoe, Sit, Shoe, Shih Tzu",
			"  Cancan, Toucan, Two, Can, Two, Can, Toucan",
			"  Stitch, Switch, Twitch, Witch, Twitch, Witch, Switch",
			"  LLama, Bulgaria, Burger, Alarm, Burger, Alarm, Bulgaria",
			"------------------------------------------------------------------------",
			"ee he:",
			"  She, Sushi, She, Sushi, She",
			"  Tutu, Cancan, Tutu, Cancan, Tutu",
			"  Itch, Stich, Itch, Stitch, Itch",
			"  Armour, LLama, Armour, LLama, Armour",
		]
	},
	"Follow The Leader": {
		"prefix": "followTheLeader",
		"body": [
			"------------------------------Follow The Leader------------------------------",
			"No Souvenir",
			"",
			"---Manual---",
			"Starting Wire:",
			"  If RJ-45, 4 to 5",
			"  Else if starting from number of batteries",
			"  Else if starting from first number of serial",
			"  Else if lit CLR, cut all wires IN DESCENDING order",
			"  Else start with lowest wire",
			"",
			"If starting wire RED, GREEN, or WHTIE, reverse alphabetical order",
			"Start from first Serial letter",
			"",
			"A or N | The previous wire is not YELLOW or BLUE or GREEN.",
			"B or O | The previous wire leads to an even numbered plug.",
			"C or P | The previous wire should be cut. ",
			"D or Q | The previous wire is RED or BLUE or BLACK.",
			"E or R | At least two of the previous three wires share a color.",
			"F or S | Exactly one of the previous two wires is the same color as this wire.",
			"G or T | The previous wire is YELLOW or WHITE or GREEN.",
			"H or U | The previous wire should not be cut.",
			"I or V | The previous wire skips a plug.",
			"J or W | The previous wire is not WHITE or BLACK or RED.",
			"K or X | The previous two wires are different colors.",
			"L or Y | The previous wire does not lead to a position labeled 6 or less.",
			"M or Z | Exactly one or neither of the previous two wires are WHITE or BLACK."
		]
	},
	"3D Maze": {
		"prefix": "3dMaze",
		"body": [
			"------------------------------3D Maze------------------------------",
			"Souvenir: Markings, Direction",
			"Markings: ",
			"Direction: ",
			"---Manual---",
			"https://ktane.timwi.de/HTML/3D%20Maze.html",
			"Row:",
			"  Start with First numeric Digit: ",
			"  Add 1 for every UNLIT with letter in 'MAZE GAMER': ",
			"  If > 7, subtract 8: ",
			"Column:",
			"  Start with Last numeric Digit: ",
			"  Add 1 for every LIT with letter in 'HELP IM LOST': ",
			"  If > 7, subtract 8: ",
			"In Reading order in document:",
			"ABC = 1",
			"ABD = 2",
			"ABH = 3",
			"ACD = 4",
			"ACH = 5",
			"ADH = 6",
			"BCD = 7",
			"BCH = 8",
			"BDH = 9",
			"CDH = 10"
		]
	},
	"The Button": {
		"prefix": "theButton",
		"body": [
			"------------------------------The Button------------------------------",
			"Souvenir (Strip Color): ",
			"",
			"Color: ",
			"Label: ",
			"---Manual---",
			"If Blue AND Text Abort, Hold",
			"If Text DeETONATE AND > 1 Battery, Tap",
			"If lit CAR AND White, Hold",
			"If lite FRK AND > 2 Batteries, Tap",
			"If Yellow, Hold",
			"If Red AND Text HOLD, Tap",
			"Else Hold",
			"",
			"Stips:",
			"Blue: 4",
			"Yellow: 5",
			"Else: 1"
		]
	}
}
